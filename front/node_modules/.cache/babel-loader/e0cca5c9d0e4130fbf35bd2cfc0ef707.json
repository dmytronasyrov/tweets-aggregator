{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rudra/Projects/tweets-aggregator/front/components/Tweets.js\";\nimport React from \"react\";\nimport EventBus from 'vertx3-eventbus-client';\n\nvar Tweets =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tweets, _React$Component);\n\n  function Tweets() {\n    var _this;\n\n    _classCallCheck(this, Tweets);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tweets).call(this));\n    _this.state = {\n      data: {\n        messages: []\n      }\n    };\n    _this.eventBus = null;\n    return _this;\n  }\n\n  _createClass(Tweets, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var data = this.state.data;\n      setTimeout(function () {\n        _this2.refs.author.refs.input.focus();\n      }, 100);\n      this.eventBus = new EventBus('http://localhost:8080/eventbus');\n      var eb = this.eventBus;\n      var self = this;\n\n      eb.onopen = function () {\n        eb.registerHandler('chat.message', function (err, message) {\n          if (!err) {\n            data = self.state.data;\n            var messages = self.state.data.messages;\n\n            if (data.author !== message.body.author) {\n              messages.push(message.body);\n              self.setState({\n                data: {\n                  author: data.author,\n                  messages: messages\n                }\n              });\n            }\n          }\n        });\n      };\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.refs.message) this.refs.message.refs.input.focus();\n      if (this.refs.messages_scroll_area) this.refs.messages_scroll_area.scrollTop = this.refs.messages_scroll_area.scrollHeight;\n    }\n  }, {\n    key: \"setAuthor\",\n    value: function setAuthor() {\n      var author = this.refs.author.refs.input.value.trim();\n      if (!author) return;\n      this.refs.author.refs.input.value = '';\n      var messages = this.state.data.messages;\n      this.setState({\n        data: {\n          author: author,\n          messages: messages\n        }\n      });\n    }\n  }, {\n    key: \"createMessage\",\n    value: function createMessage() {\n      var data = this.state.data;\n      var messages = data.messages;\n      var eb = this.eventBus;\n      var message_text = this.refs.message.refs.input.value.trim();\n      if (!message_text) return;\n      var message = {\n        message: message_text,\n        author: data.author\n      }; // Send message out\n\n      eb.publish('chat.message', message); // Render to browser\n\n      messages.push(message);\n      this.setState({\n        data: {\n          author: data.author,\n          messages: messages\n        }\n      });\n      this.refs.message.refs.input.value = '';\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var data = this.state.data;\n      if (data.author) this.createMessage();else this.setAuthor();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Hello\");\n    }\n  }]);\n\n  return Tweets;\n}(React.Component);\n\nexport default Tweets;","map":{"version":3,"sources":["/Users/rudra/Projects/tweets-aggregator/front/components/Tweets.js"],"names":["EventBus","Tweets","state","data","messages","eventBus","setTimeout","refs","author","input","focus","eb","self","onopen","registerHandler","err","message","body","push","setState","messages_scroll_area","scrollTop","scrollHeight","value","trim","message_text","publish","e","preventDefault","createMessage","setAuthor","React","Component"],"mappings":"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","sourcesContent":["\nimport EventBus from 'vertx3-eventbus-client'\n\n\nclass Tweets extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      data: {\n        messages: []\n      }\n    };\n    this.eventBus = null;\n  }\n\n  componentDidMount() {\n    let data = this.state.data;\n    setTimeout(() => {\n      this.refs.author.refs.input.focus();\n    }, 100);\n\n    this.eventBus  = new EventBus('http://localhost:8080/eventbus');\n    const eb = this.eventBus;\n    const self = this;\n\n    eb.onopen = function () {\n      eb.registerHandler('chat.message', (err, message) => {\n        if (!err) {\n          data = self.state.data;\n          const messages = self.state.data.messages;\n          if (data.author !== message.body.author) {\n            messages.push(message.body);\n            self.setState({\n              data: {\n                author: data.author,\n                messages\n              }\n            })\n          }\n        }\n      })\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.refs.message)\n      this.refs.message.refs.input.focus();\n    if (this.refs.messages_scroll_area)\n      this.refs.messages_scroll_area.scrollTop = this.refs.messages_scroll_area.scrollHeight\n  }\n\n  setAuthor() {\n    const author = this.refs.author.refs.input.value.trim();\n    if (!author)\n      return;\n    this.refs.author.refs.input.value = '';\n    const messages = this.state.data.messages;\n    this.setState({\n      data: {\n        author,\n        messages\n      }\n    })\n  }\n\n  createMessage() {\n    const data = this.state.data;\n    const messages = data.messages;\n    const eb = this.eventBus;\n    const message_text = this.refs.message.refs.input.value.trim();\n    if (!message_text)\n      return;\n    const message = {\n      message: message_text,\n      author: data.author\n    };\n    // Send message out\n    eb.publish('chat.message', message);\n    // Render to browser\n    messages.push(message);\n    this.setState({\n      data: {\n        author: data.author,\n        messages\n      }\n    });\n    this.refs.message.refs.input.value = ''\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = this.state.data;\n    if (data.author)\n      this.createMessage();\n    else\n      this.setAuthor();\n  }\n\n  render() {\n    const data = this.state.data;\n\n    return (\n      <div>Hello</div>\n    )\n  }\n}\n\nexport default Tweets"]},"metadata":{},"sourceType":"module"}